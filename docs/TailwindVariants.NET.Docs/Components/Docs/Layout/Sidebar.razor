@rendermode InteractiveServer
@attribute [DiscoverCollocatedJS]
@inherits TwComponentBase<Sidebar, Sidebar.Slots>
@implements IDisposable
@inject SidebarState State

<!-- Offcanvas Overlay -->
<div class="@_slots.GetOverlay()" @onclick="Close"></div>

<!-- Offcanvas Sidebar -->
<aside class="@_slots.GetBase()" @attributes="AdditionalAttributes">
    @RenderLinksContent()
</aside>

<JS For="this" Args="[Open]" />

@code
{
    [Parameter]
    public Slots? Classes { get; set; }

    private bool Open => State.IsOpen;

    protected override void OnInitialized()
    {
        State.OnChange += RenderStyles;
    }

    public void Dispose()
    {
        State.OnChange -= RenderStyles;
    }

    private void Close() => State.Close();

    private void RenderStyles()
    {
        _slots = Tv.Invoke(this, _sidebar);
        StateHasChanged();
    }

    private RenderFragment RenderLinksContent() => __builder =>
    {
        <nav class="mt-4 flex flex-col gap-1 text-sm md:mt-0">
            <NavLink class="@_slots.GetLinks()" href="docs/getting-started" ActiveClass="@_slots.GetActiveLinks()" @onclick="Close">Introduction</NavLink>
            <NavLink class="@_slots.GetLinks()" href="docs/usage" ActiveClass="@_slots.GetActiveLinks()" @onclick="Close">Usage</NavLink>
        </nav>
    };
}