@rendermode InteractiveServer
@attribute [DiscoverCollocatedJS]
@inherits TwComponentBase<Sidebar, Sidebar.Slots>
@implements IDisposable
@inject SidebarState State

<!-- Offcanvas Overlay -->
<div class="@_slots.GetOverlay()" @onclick="Close"></div>

<!-- Offcanvas Sidebar -->
<aside class="@_slots.GetBase()" @attributes="AdditionalAttributes">
    @RenderLinksContent()
</aside>

<JS For="this" Args="[Open]" />

@code
{
    [Parameter]
    public Slots? Classes { get; set; }

    private bool Open => State.IsOpen;

    protected override void OnInitialized()
    {
        State.OnChange += RenderStyles;
    }

    public void Dispose()
    {
        State.OnChange -= RenderStyles;
    }

    private void Close() => State.Close();

    private void RenderStyles()
    {
        _slots = Tv.Invoke(this, _sidebar);
        InvokeAsync(StateHasChanged);
    }

    private RenderFragment RenderLinksContent() => __builder =>
    {
        var link = _slots.GetLink();
		var active = _slots.GetActiveLinks();

        <nav class="@_slots.GetWrapper()">
            <!-- Getting Started -->
            <NavLink class="@link" href="docs/introduction" ActiveClass="@active" @onclick="Close">Introduction</NavLink>
            <NavLink class="@link" href="docs/installation" ActiveClass="@active" @onclick="Close">Installation</NavLink>
            <NavLink class="@link" href="docs/first-component" ActiveClass="@active" @onclick="Close">First Component</NavLink>
            <NavLink class="@link" href="docs/faq" ActiveClass="@active" @onclick="Close">FAQ</NavLink>

            <!-- Core Concepts -->
            <div class="@_slots.GetHeader()">Core Concepts</div>
            <NavLink class="@link" href="docs/core-concepts/variants" ActiveClass="@active" @onclick="Close">Variants</NavLink>
            <NavLink class="@link" href="docs/core-concepts/slots" ActiveClass="@active" @onclick="Close">Slots</NavLink>
            <NavLink class="@link" href="docs/core-concepts/classvalue" ActiveClass="@active" @onclick="Close">ClassValue</NavLink>
            <NavLink class="@link" href="docs/core-concepts/source-generators" ActiveClass="@active" @onclick="Close">Source Generators</NavLink>

            <!-- API Reference -->
            <div class="@_slots.GetHeader()">API Reference</div>
            <NavLink class="@link" href="docs/api-reference/tw-variants" ActiveClass="@active" @onclick="Close">Tv()</NavLink>
            <NavLink class="@link" href="docs/api-reference/slots-collection" ActiveClass="@active" @onclick="Close">SlotCollection</NavLink>
            <NavLink class="@link" href="docs/api-reference/islots" ActiveClass="@active" @onclick="Close">ISlots</NavLink>

            <!-- Community -->
            <div class="@_slots.GetHeader()">Community</div>
            <NavLink class="@link" href="docs/community/contributing" ActiveClass="@active" @onclick="Close">Contributing</NavLink>
            <NavLink class="@link" href="docs/community/showcases" ActiveClass="@active" @onclick="Close">Showcases</NavLink>
            <NavLink class="@link" href="docs/community/roadmap" ActiveClass="@active" @onclick="Close">Roadmap</NavLink>
        </nav>
    };
}