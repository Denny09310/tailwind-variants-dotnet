@inherits TestContext
@namespace TailwindVariants.NET.Tests.Components

@code
{
    public LinkTests()
    {
        Services.AddTailwindVariants();
    }

    [Fact]
    public void Renders_BaseClass_ByDefault()
    {
        // Arrange
        var cut = Render(
            @<Link />
        );

        // Act
        var a = cut.Find("a");

        // Assert
        Assert.Contains("inline-flex", a.ClassList);
    }

    [Fact]
    public void Applies_Underline_Always()
    {
        // Arrange
        var cut = Render(
            @<Link Underline="@Link.Underlines.Always" />
        );

        // Act
        var a = cut.Find("a");

        // Assert
        Assert.Contains("underline", a.ClassList);
    }

    [Fact]
    public void Applies_Color_Primary()
    {
        var cut = Render(
            @<Link Color="@Link.Colors.Primary" />
        );

        var a = cut.Find("a");

        Assert.Contains("text-sky-600", a.ClassList);
    }

    [Fact]
    public void Applies_Size_Small()
    {
        var cut = Render(
            @<Link Size="@Link.Sizes.Small" />
        );

        var a = cut.Find("a");

        Assert.Contains("text-sm", a.ClassList);
    }

    [Fact]
    public void Applies_Block()
    {
        // Arrange
        var cut = Render(
            @<Link Block />
        );

        // Act
        var a = cut.Find("a");

        // Assert
        Assert.Contains("after:content-['']", a.ClassList);
        Assert.DoesNotContain("hover:opacity-hover", a.ClassList);
    }

    [Fact]
    public void Applies_Disabled()
    {
        // Arrange
        var cut = Render(
            @<Link Disabled />
        );

        // Act
        var a = cut.Find("a");

        // Assert
        Assert.Contains("opacity-disabled", a.ClassList);
    }

    [Fact]
    public void PerInstance_Classes_AreApplied()
    {
        var cut = Render(
            @<Link Classes="@(new() { Base = "rounded-full" })" />
        );

        var a = cut.Find("a");

        Assert.Contains("rounded-full", a.ClassList);
    }

    [Fact]
    public void PerInstance_ClassProperty_IsApplied()
    {
        var cut = Render(
            @<Link Class="m-2" />
        );

        var a = cut.Find("a");

        Assert.Contains("m-2", a.ClassList);
    }
}